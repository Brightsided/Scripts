local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local MainWindow = Library:NewWindow("Limited Catchers!")
local Section = MainWindow:NewSection("Matar")
local Posiones = MainWindow:NewSection("Posiones")
local FarmingSection = MainWindow:NewSection("Farming")
local UtilitySection = MainWindow:NewSection("Utilidades")
local a = false

Section:CreateToggle("Snowman", function()
    a = not a
    while a do
        local args = {
            [1] = workspace:WaitForChild("Enemies"):WaitForChild("Zone 6"),
            [2] = Vector3.new(-0.8441810011863708, -0, 0.5360581874847412)
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("sendPet"):FireServer(unpack(args))
        wait()
    end
end)

local a, b, c, d, e, f, g,isFarming, antiAFK = false, false, false, false, false, false, false, false, false
Posiones:CreateToggle("Posion de suerte 1", function()
    b = not b
    while b do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Luck Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))

        wait()
    end
end)

Posiones:CreateToggle("Posion de Velocidad 1", function()
    c = not c
    while c do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Case Speed Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))

        wait()
    end
end)
Posiones:CreateToggle("Posion de Sprint 1", function()
    d = not d
    while d do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Sprint Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))
        wait()
    end
end)
Posiones:CreateToggle("Haste(Fuerza) Potion 1", function()
    e = not e
    while e do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Haste Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))

        wait()
    end
end)
Posiones:CreateToggle("Posion de Gemas 1", function()
    f = not f
    while f do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Gem Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))

        wait()
    end
end)
Posiones:CreateToggle("Posion de Monedas 1", function()
    g = not g
    while g do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Coin Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))

        wait()
    end
end)
Posiones:CreateToggle("Posion de daño 1", function()
    h = not h
    while h do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("getPotions"):InvokeServer()

        local args = {
            [1] = "Damage Potion"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("buyPotion")
            :InvokeServer(unpack(args))

        wait()
    end
end)

local function farmLimiteds()
    local limiteds = workspace:WaitForChild("Limiteds")

    -- Recorre todos los objetos dentro de "Limiteds"
    for _, limited in ipairs(limiteds:GetChildren()) do
        -- Verifica si el objeto tiene un hijo llamado "Handle"
        if limited:FindFirstChild("Handle") then
            local args = {
                [1] = limited.Handle,
                [2] = Vector3.new(-0.3583495020866394, -0, 0.933587908744812)
            }

            -- Envía el comando para interactuar con el objeto
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("sendPet"):FireServer(unpack(args))
        end
    end
end
FarmingSection:CreateToggle("Farmear monedas", function(value)
    isFarming = value

    if isFarming then
        -- Corre el farming cada segundo para buscar nuevos objetos
        local connection
        connection = game:GetService("RunService").Stepped:Connect(function()
            if not isFarming then
                connection:Disconnect()  -- Detiene el farming si se desactiva el toggle
                return
            end

            farmLimiteds()  -- Llama a la función para farmear los objetos
        end)
    end
end)

local function startAntiAFK()
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:Connect(function()
        vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end)
end

UtilitySection:CreateButton("Anti-AFK", function(value)
    antiAFK = value
    if antiAFK then
        startAntiAFK()
    end
end)

local EggWindow = Library:NewWindow("Abrir Huevos")
local AbrirHuevos = EggWindow:NewSection("Huevos")
local idMundo = 0
local cantidadDeHuevos = 0

AbrirHuevos:CreateTextbox("Número del mundo", function(text)
    local mundo = tonumber(text) 
    if mundo then
        idMundo = mundo
    else
        idMundo = 0
    end
end)

AbrirHuevos:CreateTextbox("Cantidad de huevos", function(text)
    local cantidad = tonumber(text) 
    if cantidad then
        cantidadDeHuevos = cantidad
    else
        cantidadDeHuevos = 0
    end
end)

local toggleActivo = false

AbrirHuevos:CreateToggle("Abrir huevos", function(state)
    toggleActivo = state

    if toggleActivo then
        spawn(function()
            while toggleActivo do
                if idMundo > 0 and cantidadDeHuevos > 0 then
                    for i = 1, cantidadDeHuevos do
                        local nombreHuevo = "Egg " .. idMundo .. "x2"
                        local args = {
                            [1] = nombreHuevo,
                            [2] = 1
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("hatch"):InvokeServer(unpack(args))

                        wait(0.1)
                    end
                else
                    print("Error")
                end
                wait(0.1)
            end
        end)
    end
end)
